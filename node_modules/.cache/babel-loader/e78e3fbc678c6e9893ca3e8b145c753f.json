{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapp1\\\\01-starting-project_4\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReduser = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReduser = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    console.log(state.value.trim().length);\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [error, setError] = useState('');\n  const [emailState, dispatchEmail] = useReducer(emailReduser, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReduser, {\n    value: '',\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const {\n    isValid: emailIsValid\n  } = emailState; // Allies assigned emailIsValid is a varible which stored value of isValid\n\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  console.log(`psd`, passwordIsValid);\n  console.log(emailIsValid);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking validity');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('cleaning');\n      clearTimeout(identifier);\n    }; // clean up function runs before every side effect function \n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.value.includes('@') && event.target.value.trim().length > 6\n    // );   \n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogIn(emailState.value, passwordState.value);\n    }\n\n    if (!formIsValid) {\n      setError('Please enter Valid email and Password ');\n    }\n\n    authCtx.isLoggedIn = formIsValid;\n    console.log(authCtx.isLoggedIn);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: [error, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"o+eXNfU9CZBlsmzppOp7YNDlgtk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/reactapp1/01-starting-project_4/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Error","emailReduser","state","action","type","value","val","isValid","includes","passwordReduser","trim","length","console","log","Login","props","formIsValid","setFormIsValid","error","setError","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogIn","isLoggedIn","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer , useContext} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Error from './Error';\n\n\nconst emailReduser = (state , action) =>{\n  if (action.type === 'USER_INPUT') {\n    return {value: action.val, isValid: action.val.includes('@')};\n  }\n  if (action.type === 'INPUT_BLUR'){\n    return {value: state.value , isValid: state.value.includes('@')};\n  }\n  return {value: '' , isValid: false};\n};\n\nconst passwordReduser = (state, action) =>{\n  if (action.type === 'USER_INPUT'){ \n    return {value: action.val , isValid: action.val.trim().length > 6};\n  }\n  if (action.type === 'INPUT_BLUR'){\n    console.log(state.value.trim().length );\n    return {value: state.value , isValid: state.value.trim().length > 6};\n  }\n  return {value: '' , isValid: false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [error,setError] = useState('');\n  const [emailState, dispatchEmail] = useReducer(emailReduser , {\n    value: '',\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReduser , {\n    value: '',\n    isValid: null,\n  })\n  const authCtx = useContext(AuthContext);\n\n  \n  const {isValid: emailIsValid} = emailState;  // Allies assigned emailIsValid is a varible which stored value of isValid\n  const {isValid: passwordIsValid} = passwordState;\n  console.log(`psd`,passwordIsValid);\n  console.log(emailIsValid);\n  useEffect(() => {\n    const identifier = setTimeout(()=> {\n      console.log('checking validity');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500); \n    return ()=>{\n      console.log('cleaning');\n      clearTimeout(identifier);\n    }; // clean up function runs before every side effect function \n  } , [emailIsValid , passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value}); \n    // setFormIsValid(\n    //   emailState.value.includes('@') && event.target.value.trim().length > 6\n    // );   \n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'})\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'})\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid){\n    authCtx.onLogIn(emailState.value, passwordState.value);\n    }\n    if (!formIsValid) {\n      setError('Please enter Valid email and Password ');\n    }\n    authCtx.isLoggedIn =  formIsValid;\n    console.log(authCtx.isLoggedIn);\n  };\n\n  return (\n    <Card className={classes.login}>\n    {error}\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            SUBMIT\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}